{"version":3,"file":"heroRouter.js","sourceRoot":"","sources":["../../src/routes/heroRouter.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAEA,mCAAqC;AACrC,oCAAoC;AACpC,IAAM,MAAM,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC;AAC/C;IAAgC,8BAAS;IAAzC;;IAmEA,CAAC;IAlEiB,iBAAM,GAApB,UAAqB,MAAc;QAC/B,KAAK;QACL,OAAO,CAAC,GAAG,CAAC,gDAAgD,CAAC,CAAC;QAE9D,qBAAqB;QACrB,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;YACtE,IAAI,UAAU,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,mBAAmB;QACnB,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;YAC1E,IAAI,UAAU,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,4BAA4B;IAChC,CAAC;IAED,iBAAiB;IACb,oBAAoB;IACxB,GAAG;IAEH;;OAEG;IACI,2BAAM,GAAb,UAAc,GAAY,EAAE,GAAa,EAAE,IAAkB;QACzD;;;;;;;;;;iBAUS;QACL,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACzB,CAAC;IAED;;OAEG;IACI,2BAAM,GAAb,UAAc,GAAY,EAAE,GAAa,EAAE,IAAkB;QACzD,IAAI,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QACpC,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,UAAC,IAAQ,IAAK,OAAA,IAAI,CAAC,EAAE,KAAK,KAAK,EAAjB,CAAiB,CAAC,CAAC;QACxD,IAAI,IAAI,EAAE;YACN,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;YACvC;;;;;sBAKU;SACb;aACI;YACD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC;iBACV,IAAI,CAAC;gBACF,OAAO,EAAE,kCAAkC;gBAC3C,MAAM,EAAE,GAAG,CAAC,MAAM;aACrB,CAAC,CAAC;SACV;IAGL,CAAC;IAGL,iBAAC;AAAD,CAAC,AAnED,CAAgC,kBAAS,GAmExC;AAnEY,gCAAU","sourcesContent":["import {Router, Request, Response, NextFunction} from 'express';\nimport DbClient = require(\"../DbClient\");\nimport { BaseRoute } from \"./router\";\n//import DbClient from '../DbClient'\nconst Heroes = require('../../dist/data.json');\nexport class HeroRouter extends BaseRoute {\n    public static create(router: Router) {\n        //log\n        console.log(\"[HeroRoute::create] Creating HeroRoutes route.\");\n\n        //add home page route\n        router.get(\"/api/heroes\", (req: Request, res: Response, next: NextFunction) => {\n            new HeroRouter().getAll(req, res, next);\n        });\n\n        // add getOne route\n        router.get(\"/api/heroes/:id\", (req: Request, res: Response, next: NextFunction) => {\n            new HeroRouter().getOne(req, res, next);\n        });\n\n        //router.get(\"/api/heroes/\")\n    }\n\n    //constructor() {\n        // not much here yet\n    //}\n\n    /**\n     * GET all Heroes.\n     */\n    public getAll(req: Request, res: Response, next: NextFunction) {\n        /* DbClient.connect()\n            .then((db) => {\n                return db!.collection(\"sneakers\").find().toArray();\n            })\n            .then((sneakers:any) => {\n                console.log(sneakers);\n                res.send(sneakers);\n            })\n            .catch((err) => {\n                console.log(\"err.message\");\n            }) */\n            res.send(Heroes);\n    }\n\n    /**\n     * GET one hero by id\n     */\n    public getOne(req: Request, res: Response, next: NextFunction) {\n        let query = parseInt(req.params.id);\n        let hero = Heroes.find((hero:any) => hero.id === query);\n        if (hero) {\n            this.render(req, res, \"oneShoe\", hero);\n            /* res.status(200)\n                .send({\n                    message: 'Success',\n                    status: res.status,\n                    hero\n                }); */\n        }\n        else {\n            res.status(404)\n                .send({\n                    message: 'No hero found with the given id.',\n                    status: res.status\n                });\n        }\n\n\n    }\n\n\n}"]}