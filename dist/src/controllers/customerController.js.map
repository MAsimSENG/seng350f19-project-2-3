{"version":3,"file":"customerController.js","sourceRoot":"","sources":["../../../src/controllers/customerController.ts"],"names":[],"mappings":"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","sourcesContent":["import { NextFunction, Request, Response, Router} from \"express\";\r\nimport Helpers = require(\"../helperFunctions\");\r\nimport { CustomerModel } from \"../models/customerModel\";\r\nimport { BaseRoute } from \"../routes/router\";\r\n\r\nlet userJson: any;\r\nlet userShoes: any;\r\nlet netGain: number = 0;\r\nlet sunkCost: number = 0;\r\nlet totalRevenue: number = 0;\r\n\r\nexport class CustomerController extends BaseRoute {\r\n\r\n    public static create(router: Router) {\r\n        // sorting all the shoes the user (id) owns from low to high\r\n        router.get(\"/user/:id/shoes/sort/price_low\", (req: Request, res: Response, next: NextFunction) => {\r\n            new CustomerController().sortPriceLow(req, res, next);\r\n        });\r\n        // sorting the shoes the user (id) owns from high to low\r\n        router.get(\"/user/:id/shoes/sort/price_high\", (req: Request, res: Response, next: NextFunction) => {\r\n            new CustomerController().sortPriceHigh(req, res, next);\r\n        });\r\n        // adds a shoe (id2) to a users (id) portfolio\r\n        router.post(\"/user/:id/add_shoe/:id2\", (req: Request, res: Response, next: NextFunction) => {\r\n            new CustomerController().addShoe(req, res, next);\r\n        });\r\n        // removes a shoe (id2) from a users (id) portfolio\r\n        router.post(\"/user/:id/remove_shoe/:id2\", (req: Request, res: Response, next: NextFunction) => {\r\n            new CustomerController().removeShoe(req, res, next);\r\n        });\r\n        // users home page showing all the shoes the user (id) owns\r\n        router.get(\"/user/:id/shoes\", (req: Request, res: Response, next: NextFunction) => {\r\n            new CustomerController().getAll(req, res, next);\r\n        });\r\n        // showing a specific shoe (id2) that the user (id) owns\r\n        router.get(\"/user/:id/shoes/:id2\", (req: Request, res: Response, next: NextFunction) => {\r\n            new CustomerController().getOne(req, res, next);\r\n        });\r\n\r\n        router.post(\"/user/:id/edit_shoe/:id2\", (req: Request, res: Response, next: NextFunction) => {\r\n            new CustomerController().editShoe(req, res, next);\r\n        });\r\n\r\n    }\r\n\r\n    public async sortPriceLow(req: Request, res: Response, next: NextFunction) {\r\n        const idString = \"id\";\r\n        const queryint = parseInt(req.params[idString], 10);\r\n        if (await this.check_local(queryint)) {\r\n            const sortedShoes: any = userShoes;\r\n            sortedShoes.sort((a: any, b: any) => a.current_price - b.current_price);\r\n            this.render(req, res, \"allShoes\",\r\n                {data: sortedShoes, id: queryint, net: netGain, sunk: sunkCost,\r\n                    title: \"Shoes\", total: totalRevenue, username: userJson.username});\r\n        } else {\r\n            res.status(404);\r\n            res.send(\"invalid user\");\r\n        }\r\n\r\n    }\r\n\r\n    public async sortPriceHigh(req: Request, res: Response, next: NextFunction) {\r\n        const idString = \"id\";\r\n        const queryint = parseInt(req.params[idString], 10);\r\n        if (await this.check_local(queryint)) {\r\n            const sortedShoes: any = userShoes;\r\n            sortedShoes.sort((a: any, b: any) => b.current_price - a.current_price);\r\n            this.render(req, res, \"allShoes\",\r\n                {data: sortedShoes, id: queryint, net: netGain, sunk: sunkCost,\r\n                    title: \"Shoes\", total: totalRevenue, username: userJson.username});\r\n        } else {\r\n            res.status(404);\r\n            res.send(\"invalid user\");\r\n        }\r\n\r\n    }\r\n\r\n    public async addShoe(req: Request, res: Response, next: NextFunction) {\r\n        const userIdString = \"id\";\r\n        const userId = parseInt(req.params[userIdString], 10);\r\n        const shoeIdString = \"id2\";\r\n        const shoeId = parseInt(req.params[shoeIdString], 10);\r\n        if (await this.check_local(userId)) {\r\n            const uif = new CustomerModel();\r\n            let price = req.body.purchase_price;\r\n            if (!price) {\r\n                price = 0;\r\n            }\r\n            await uif.add_shoe(userId, shoeId, price);\r\n            res.redirect(\"/user/\" + userId + \"/shoes/\");\r\n        } else {\r\n            res.status(404)\r\n            .send({\r\n                message: \"No user with associated ID. Check the entered number.\",\r\n                status: res.status,\r\n            });\r\n            res.send(\"invalid user\");\r\n\r\n        }\r\n    }\r\n\r\n    public async editShoe(req: Request, res: Response, next: NextFunction) {\r\n        const uString = \"id\";\r\n        const idString = \"id2\";\r\n        const userID = parseInt(req.params[uString], 10);\r\n        const shoeID = req.params[idString];\r\n        const uIF = new CustomerModel();\r\n        if (!req.body.threshold) {\r\n            req.body.threshold = 0;\r\n        }\r\n        await uIF.edit_shoe(shoeID, req.body.purchase_price);\r\n        res.redirect(\"/user/\" + userID + \"/shoes\");\r\n    }\r\n\r\n    public async removeShoe(req: Request, res: Response, next: NextFunction) {\r\n        const userIdString = \"id\";\r\n        const userId = parseInt(req.params[userIdString], 10);\r\n        if (!(await this.check_local(userId))) {\r\n            res.status(404)\r\n                .send({\r\n                    message: \"No user with associated ID. Check the entered number.\",\r\n                    status: res.status,\r\n                });\r\n        }\r\n        const idString = \"id2\";\r\n        const docID = req.params[idString];\r\n        const uif = new CustomerModel();\r\n        await uif.remove_shoe(docID);\r\n        res.redirect(\"/user/\" + userId + \"/shoes/\");\r\n    }\r\n\r\n    /**\r\n     * GET all Shoes. Take user id from the url parameter. Then get all shoes for that user.\r\n     */\r\n    public async getAll(req: Request, res: Response, next: NextFunction) {\r\n        const idString = \"id\";\r\n        const queryint = parseInt(req.params[idString], 10);\r\n        if (await this.setLocal(queryint)) {\r\n            userShoes.sort((a: any, b: any) => {\r\n                if (a.name < b.name) { return -1; }\r\n                if (a.name > b.name) { return 1; }\r\n                return 0;\r\n            });\r\n            console.log(userShoes[1])\r\n            this.render(req, res, \"allShoes\",\r\n                {data: userShoes, id: queryint, net: netGain, sunk: sunkCost,\r\n                    title: \"Shoes\", total: totalRevenue, username: userJson.username});\r\n        } else {\r\n            res.status(404)\r\n                .send({\r\n                    message: \"No user found with the given id.\",\r\n                    status: res.status,\r\n                });\r\n        }\r\n    }\r\n\r\n    public async getOne(req: Request, res: Response, next: NextFunction) {\r\n        const userIdString = \"id\";\r\n        const userId = parseInt(req.params[userIdString], 10);\r\n        const shoeIdString = \"id2\";\r\n        const shoeId = req.params[shoeIdString];\r\n        if (await this.check_local(userId)) {\r\n            const shoe = Helpers.findUserShoe(shoeId, userShoes);\r\n            if (shoe) {\r\n                const diff = shoe.current_price - shoe.purchase_price;\r\n                this.render(req, res, \"oneShoe\", {id: userId, diff, purchase: shoe.purchase_price, shoe});\r\n            } else {\r\n                res.status(404)\r\n                    .send({\r\n                        message: \"No shoe found with the given id.\",\r\n                        status: res.status,\r\n                    });\r\n            }\r\n        } else {\r\n            res.status(404)\r\n                .send({\r\n                    message: \"No user found with the given id.\",\r\n                    status: res.status,\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    private async check_local(userID: number) {\r\n        if (!(userJson && userShoes)) {\r\n            return await this.setLocal(userID);\r\n        } else if (userJson.user_id !== userID) {\r\n            return await this.setLocal(userID);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private async setLocal(userID: any) {\r\n        userShoes = [];\r\n        netGain = 0;\r\n        sunkCost = 0;\r\n        totalRevenue = 0;\r\n        userJson = await Helpers.getUserInfo(userID);\r\n        if (!userJson) {\r\n            return false;\r\n        }\r\n        userShoes = await Helpers.getUserShoes(userID);\r\n        await this.setNet(userShoes);\r\n        return true;\r\n    }\r\n\r\n    private setNet(userShoes: any) {\r\n        [netGain, sunkCost, totalRevenue] = Helpers.setNet(userShoes);\r\n    }\r\n\r\n}\r\n"]}