{"version":3,"file":"notificationModel.js","sourceRoot":"","sources":["../../../../src/models/notificationModel.ts"],"names":[],"mappings":"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","sourcesContent":["import mongodb = require(\"mongodb\");\r\nimport DbClient = require(\"../DbClient\");\r\n\r\nconst ObjectID: any = mongodb.ObjectID;\r\n\r\nexport class NotificationModel {\r\n\r\n    constructor() {}\r\n\r\n    public getUserNotifications(userId: any) {\r\n        const notifications = DbClient.connect()\r\n            .then((db) => {\r\n                return db!.collection(\"notifications\").find({user_id: userId}).toArray();\r\n            })\r\n            .then((notif: any) => {\r\n                return notif;\r\n                // res.send(sneakers);\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"err.message\");\r\n            });\r\n        return notifications;\r\n    }\r\n\r\n    public fulfill(Id: any) {\r\n        const result = DbClient.connect()\r\n            .then((db) => {\r\n                db!.collection(\"notifications\").updateOne({_id: ObjectID(Id)}, {$set: {fulfilled: true}});\r\n                return true;\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"err.message\");\r\n                return false;\r\n            });\r\n        return result;\r\n    }\r\n\r\n    public addNotification(userId: number, shoeId: number, threshold: any, type: any) {\r\n        const nAdd = DbClient.connect()\r\n            .then((db) => {\r\n                db!.collection(\"notifications\").insertOne({fulfilled: false,\r\n                    shoe_id: shoeId, threshold, type , user_id: userId});\r\n                return true;\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"err.message\");\r\n                return false;\r\n            });\r\n        return nAdd;\r\n    }\r\n\r\n    public remove_notif(id: any) {\r\n        const nRemove = DbClient.connect()\r\n            .then((db) => {\r\n                db!.collection(\"notifications\").deleteOne({_id: ObjectID(id)});\r\n                return true;\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"err.message\");\r\n                return false;\r\n            });\r\n        return nRemove;\r\n    }\r\n\r\n    public get_notif(id: any) {\r\n        const notification = DbClient.connect()\r\n            .then((db) => {\r\n                return db!.collection(\"notifications\").find({_id: ObjectID(id)}).toArray();\r\n            })\r\n            .then((notif: any) => {\r\n                return notif;\r\n                // res.send(sneakers);\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"err.message\");\r\n            });\r\n        return notification;\r\n    }\r\n\r\n    public edit_notif(id: any, threshold: any, type: any) {\r\n        const result = DbClient.connect()\r\n            .then((db) => {\r\n                db!.collection(\"notifications\").updateOne({_id: ObjectID(id)},\r\n                    {$set: {threshold, type, fulfilled: false}});\r\n                return true;\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"err.message\");\r\n                return false;\r\n            });\r\n        return result;\r\n    }\r\n}\r\n"]}