{"version":3,"file":"product_model_controller.js","sourceRoot":"","sources":["../../../src/routes/product_model_controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { NextFunction, Request, Response, Router} from \"express\";\nimport DbClient = require(\"../DbClient\");\nimport { ShoeModel } from \"../models/shoe_model\";\nimport { UserModel } from \"../models/user_model\";\nimport { BaseRoute } from \"./router\";\n\nlet userJson: any;\nlet userKeys: any;\nlet userShoes: any[] = [];\nlet netGain: number = 0;\nlet sunkCost: number = 0;\nlet totalRevenue: number = 0;\nlet Shoes: any;\n\n\n\nexport class ShoeRouter extends BaseRoute {\n\n// show all shoes from db\n    public static create(router: Router) {\n\n\n        router.get(\"/user/:id/allShoes\", (req: Request, res: Response, next: NextFunction) => {\n            new ShoeRouter().allShoes(req, res, next);\n        });\n\n// show all shoes sorted from high to low\n        router.get(\"/user/:id/allShoes/sort/price_high\", (req: Request, res: Response, next: NextFunction) => {\n            new ShoeRouter().sortPriceHighDb(req, res, next);\n        });\n\n// show all shoes sorted from low to high\n\n        router.get(\"/user/:id/allShoes/sort/price_low\", (req: Request, res: Response, next: NextFunction) => {\n            new ShoeRouter().sortPriceLowDb(req, res, next);\n        });\n\n    }\n\n\n\n    // get all the shoes from the db and render to shoesList view\n    public async allShoes(req: Request, res: Response, next: NextFunction) {\n        const idString = \"id\";\n        const userId = parseInt(req.params[idString], 10);\n        if (await this.isUser(userId)) {\n            const shoeIf = new ShoeModel();\n            const allShoes = await shoeIf.getAllDB();\n            this.render(req, res, \"shoeList\", {id: userId, title: \"Shoes\", data: allShoes});\n        } else {\n            res.status(404)\n                .send({\n                    message: \"No user found with the given user id.\",\n                    status: res.status,\n                });\n        }\n    }\n\n\n\n    public async sortPriceLowDb(req: Request, res: Response, next: NextFunction) {\n        const idString = \"id\";\n        const queryint = parseInt(req.params[idString], 10);\n        if (await this.isUser(queryint)) {\n            // const allShoes = this.getAllDbShoes()\n            const shoeIf = new ShoeModel();\n            const allShoes = await shoeIf.getAllDB();\n            const sortedShoes: any = allShoes;\n            sortedShoes.sort((a: any, b: any) => a.current_price - b.current_price);\n            this.render(req, res, \"shoeList\", {\n                data: sortedShoes,\n                id: queryint,\n                title: \"Shoes\",\n                username: userJson.username,\n            });\n        } else {\n            res.status(404);\n            res.send(\"invalid user\");\n        }\n    }\n\n    public async sortPriceHighDb(req: Request, res: Response, next: NextFunction) {\n        const idString = \"id\";\n        const queryint = parseInt(req.params[idString], 10);\n        if (await this.isUser(queryint)) {\n            const shoeIf = new ShoeModel();\n            const allShoes = await shoeIf.getAllDB();\n            const sortedShoes: any = allShoes;\n            sortedShoes.sort((a: any, b: any) => b.current_price - a.current_price);\n            this.render(req, res, \"shoeList\", {\n                data: sortedShoes,\n                id: queryint,\n                title: \"Shoes\",\n                username: userJson.username,\n            });\n        } else {\n            res.status(404);\n            res.send(\"invalid user\");\n        }\n    }\n\n\n\n\n    private async isUser(userID: any) {\n        const userIF = new UserModel();\n        return await userIF.isUser(userID);\n    }\n}\n\n\n\n\n\n"]}