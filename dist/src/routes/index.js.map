{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/routes/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,yDAAwD;AACxD,mCAAqC;AAErC;;;;GAIG;AACH;IAAgC,8BAAS;IAiBrC;;;;;OAKG;IACH;eACI,iBAAO;IACX,CAAC;IAvBD;;;;;;OAMG;IACW,iBAAM,GAApB,UAAqB,MAAc;QAC/B,MAAM;QACN,sBAAsB;QACtB,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;YAC5D,IAAI,UAAU,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACP,CAAC;IAYD;;;;;;;;OAQG;IACU,0BAAK,GAAlB,UAAmB,GAAY,EAAE,GAAa,EAAE,IAAkB;;;;;;wBAC9D,mBAAmB;wBACnB,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;wBAEhB,GAAG,GAAG,IAAI,6BAAa,EAAE,CAAC;wBAClB,qBAAM,GAAG,CAAC,SAAS,EAAE,EAAA;;wBAA7B,KAAK,GAAG,SAAqB;wBAEnC,KAAK,CAAC,IAAI,CAAC,UAAC,CAAM,EAAE,CAAM;4BACtB,OAAO,CAAC,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC;wBAC5E,CAAC,CAAC,CAAC;wBAEG,MAAM,GAAQ,EAAE,CAAC;wBACjB,YAAY,GAAQ,EAAE,CAAC;wBAE7B,KAAU,IAAI,IAAI,KAAK,EAAE;4BACrB,IAAG,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;gCAC3B,IAAG,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO;oCAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;;oCAC5C,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;6BACvC;yBACJ;wBAEK,OAAO,GAAW;4BACpB,OAAO,EAAE,UAAU;4BACnB,YAAY,cAAA;4BACZ,MAAM,QAAA;yBACT,CAAC;wBAEF,kBAAkB;wBAClB,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;;;;;KAC3C;IACL,iBAAC;AAAD,CAAC,AAlED,CAAgC,kBAAS,GAkExC;AAlEY,gCAAU","sourcesContent":["import { NextFunction, Request, Response, Router } from \"express\";\nimport { CustomerModel } from \"../models/customerModel\";\nimport { BaseRoute } from \"./router\";\n\n/**\n * / route\n *\n * @class IndexRoute\n */\nexport class IndexRoute extends BaseRoute {\n\n    /**\n     * Create the routes.\n     *\n     * @class IndexRoute\n     * @method create\n     * @static\n     */\n    public static create(router: Router) {\n        // log\n        // add home page route\n        router.get(\"/\", (req: Request, res: Response, next: NextFunction) => {\n            new IndexRoute().index(req, res, next);\n        });\n    }\n\n    /**\n     * Constructor\n     *\n     * @class IndexRoute\n     * @constructor\n     */\n    constructor() {\n        super();\n    }\n\n    /**\n     * The home page route.\n     *\n     * @class IndexRoute\n     * @method index\n     * @param req {Request} The express Request object.\n     * @param res {Response} The express Response object.\n     * @next {NextFunction} Execute the next method.\n     */\n    public async index(req: Request, res: Response, next: NextFunction) {\n        // set custom title\n        this.title = \"StalkX\";\n        // set message\n        const cIF = new CustomerModel();\n        const users = await cIF.get_users();\n\n        users.sort((a: any, b: any) => {\n            return a.username.toLowerCase().localeCompare(b.username.toLowerCase());\n        });\n\n        const admins: any = [];\n        const regularUsers: any = [];\n\n        for(const item in users) {\n            if(users.hasOwnProperty(item)) {\n                if(users[item].isAdmin) admins.push(users[item]);\n                else regularUsers.push(users[item]);\n            }\n        }\n\n        const options: object = {\n            message: \"Welcome!\",\n            regularUsers,\n            admins\n        };\n\n        // render template\n        this.render(req, res, \"index\", options);\n    }\n}\n"]}
