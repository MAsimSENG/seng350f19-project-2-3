{"version":3,"file":"productModel.js","sourceRoot":"","sources":["../../../src/models/productModel.ts"],"names":[],"mappings":"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","sourcesContent":["import DbClient = require(\"../DbClient\");\n\nexport class ProductModel {\n\n    constructor() {}\n    /*\n        input type: key value arr, example :  [{\"1\":300}, {\"3\":400},{\"5\":500}]\n        returns an array of shoe objects ex: [ {shoe_1 ...}, {shoe_2 ...}, {shoe_3}...]\n     */\n    public getAllShoes(shoeKeysVal: any) {\n\n        const keyArr: any[] = [];\n\n        // get the keys from the input, keys_arr should be equal to [1,3,5] from the example above\n\n        let prop;\n        for (prop of shoeKeysVal) {\n            keyArr.push(JSON.parse(JSON.stringify(prop)).shoe_id);\n        }\n\n        // an array of objects holding indvidual json objects for each of the shoes the user has\n        const jsonShoeArr: any[] = [];\n\n        const shoes = DbClient.connect()\n            .then((db) => {\n                // will return all the shoes in db\n                return db!.collection(\"shoes\").find().toArray();\n            })\n            .then((sneakers: any) => {\n                // loop over all the shoes in db and push into jsonShoeArr only those that are\n                // owned by user\n                let shoe;\n                let id;\n                for (shoe of sneakers ) {\n                    for (id of keyArr) {\n                        // if current shoe is also a shoe owned by user, id is type string so we typecast to number\n                        if (shoe.shoe_id === Number(id)) {\n                            jsonShoeArr.push(shoe);\n                            break;\n                        }\n                    }\n                }\n                return jsonShoeArr;\n            })\n            .catch((err) => {\n                console.log(\"err.message\");\n            });\n\n        return shoes;\n    }\n\n    /*\n     Input type: integer that refers to the shoe_id. ex: 3\n     Output type: a json shoe obejct ex: {shoe_id:3 ... }\n     */\n\n    public getOneShoe(shoeID: any) {\n\n        // an array of objects holding indvidual json objects for each of the shoes the user has\n        const jsonShoeArr: any[] = [];\n\n        const shoes = DbClient.connect()\n            .then((db) => {\n\n                // will return all the shoes in db\n                return db!.collection(\"shoes\").find().toArray();\n\n            })\n\n            .then((sneakers: any) => {\n\n                // loop over all the shoes in db and push into jsonShoeArr only the shoe that has id\n                // shoeID\n                let shoe;\n                for ( shoe of sneakers ) {\n                    // if current shoe is also a shoe whose id is shoeID, shoeID is type string so we typecast to number\n                    if (shoe.shoe_id === Number(shoeID)) {\n                        jsonShoeArr.push(shoe);\n                        break;\n                    }\n                }\n                return jsonShoeArr[0];\n            })\n            .catch((err) => {\n                console.log(\"err.message\");\n            });\n\n        return shoes;\n    }\n\n    /*\n            Return all the shoes for the view where we need to see all shoes available in db\n     */\n\n    public updateShoes(priceChange: any) {\n        const shoeUpdate = DbClient.connect()\n            .then((db) => {\n                db!.collection(\"shoes\").updateMany({}, { $inc: { current_price: priceChange }});\n                return true;\n            })\n            .catch((err) => {\n                console.log(\"failed to update shoes\");\n                return false;\n            });\n        return shoeUpdate;\n    }\n\n    public getAllDB() {\n        const shoes = DbClient.connect()\n            .then((db) => {\n                return db!.collection(\"shoes\").find().toArray();\n            })\n            .then((sneakers: any) => {\n                return sneakers;\n            })\n            .catch((err) => {\n                console.log(\"err.message\");\n            });\n\n        return shoes;\n    }\n\n    public add_shoe(model: any, shoe_id: any, size: any, cp: any, rp: any, brand: any, colorway: any) {\n        const add_shoes = DbClient.connect()\n            .then((db) => {\n                db!.collection(\"shoes\").insertOne({ brand: brand, colorway: colorway, current_price: cp,\n                    model: model, retail_price: rp, shoe_id: shoe_id, size: size});\n\n                console.log(\"adding shoe\");\n                return true;\n            })\n            .catch((err) => {\n                console.log(\"err.message\");\n                return false;\n            });\n        return add_shoes;\n    }\n\n\n    public edit_shoe(model:any, shoe_id:any, size: any, cp: any, rp: any, brand: any, colorway: any) {\n        const result = DbClient.connect()\n            .then((db) => {\n                db!.collection(\"shoes\").updateOne({shoe_id: shoe_id},\n                    {$set: {brand: brand, colorway: colorway, current_price: cp, model: model, retail_price: rp, size: size}});\n                return true;\n            })\n            .catch((err) => {\n                console.log(\"err.message\");\n                return false;\n            });\n        return result;\n    }\n\n    public remove_shoe(shoeId: any) {\n        const remove_user = DbClient.connect()\n            .then((db) => {\n                db!.collection(\"shoes\").deleteOne({ shoe_id: shoeId});\n                db!.collection(\"user_shoes\").deleteMany({ shoe_id: shoeId});\n                db!.collection(\"notifications\").deleteMany({ shoe_id: shoeId});\n                db!.collection(\"users\").deleteMany({ shoe_id: null});\n\n                console.log(\"deleted shoe\");\n                return true;\n            })\n            .catch((err) => {\n                console.log(\"err.message\");\n                return false;\n            });\n        return remove_user;\n    }\n\n\n\n\n\n\n\n}\n"]}
