{"version":3,"file":"customerModel.js","sourceRoot":"","sources":["../../../src/models/customerModel.ts"],"names":[],"mappings":"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","sourcesContent":["import DbClient = require(\"../DbClient\");\r\nconst ObjectID = require(\"mongodb\").ObjectID;\r\n\r\nexport class CustomerModel {\r\n\r\n    constructor() {}\r\n\r\n    public userInfo(userId: any) {\r\n        const users = DbClient.connect()\r\n            .then((db) => {\r\n                return db!.collection(\"users\").find({user_id: userId}).toArray();\r\n            })\r\n            .then((sneakers: any) => {\r\n                // console.log(sneakers);\r\n                return sneakers;\r\n                // res.send(sneakers);\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"err.message\");\r\n            });\r\n\r\n        // console.log(users);\r\n\r\n        return users;\r\n    }\r\n\r\n    public add_shoe(userId: any, shoeID: number, purchase: number) {\r\n        const shoeAdd = DbClient.connect()\r\n            .then((db) => {\r\n                db!.collection(\"user_shoes\").insertOne({user_id:userId,shoe_id:shoeID,purchase_price:purchase});\r\n                console.log(\"adding shoe\");\r\n                return true;\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"err.message\");\r\n                return false;\r\n            });\r\n        return shoeAdd;\r\n    }\r\n\r\n    public remove_shoe(id: any) {\r\n        const shoeRemove = DbClient.connect()\r\n            .then((db) => {\r\n                db!.collection(\"user_shoes\").deleteOne({_id: ObjectID(id)});\r\n                return true;\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"err.message\");\r\n                return false;\r\n            });\r\n        return shoeRemove;\r\n    }\r\n\r\n    public isUser(userID: any) {\r\n        const result = DbClient.connect()\r\n            .then((db) => {\r\n                return db!.collection(\"users\").find({user_id: userID}).toArray();\r\n            })\r\n            .then((value: any) => {\r\n                if (value.length == 0) {\r\n                    return false;\r\n                }\r\n                else return true\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"err.message\");\r\n            });\r\n        return result;\r\n    }\r\n\r\n    public get_keys(userID: any) {\r\n        const user_keys = DbClient.connect()\r\n            .then((db) => {\r\n                return db!.collection(\"user_shoes\").find({user_id: userID}).toArray();\r\n            })\r\n            .then((sneakers: any) => {\r\n                // console.log(sneakers);\r\n                console.log(sneakers);\r\n                return sneakers;\r\n                // res.send(sneakers);\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"err.message\");\r\n            });\r\n        return user_keys;\r\n    }\r\n\r\n    public get_users() {\r\n        const users = DbClient.connect()\r\n            .then((db) => {\r\n                return db!.collection(\"users\").find().toArray();\r\n            })\r\n            .then((sneakers: any) => {\r\n                // console.log(sneakers);\r\n                //console.log(sneakers);\r\n                return sneakers;\r\n                // res.send(sneakers);\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"err.message\");\r\n            });\r\n        return users;\r\n    }\r\n\r\n    public get_all_keys() {\r\n        const user_keys = DbClient.connect()\r\n            .then((db) => {\r\n                return db!.collection(\"user_shoes\").find().toArray();\r\n            })\r\n            .then((sneakers: any) => {\r\n                // console.log(sneakers);\r\n                console.log(sneakers);\r\n                return sneakers;\r\n                // res.send(sneakers);\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"err.message\");\r\n            });\r\n        return user_keys;\r\n    }\r\n}\r\n"]}