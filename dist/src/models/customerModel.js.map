{"version":3,"file":"customerModel.js","sourceRoot":"","sources":["../../../src/models/customerModel.ts"],"names":[],"mappings":"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","sourcesContent":["import mongodb = require(\"mongodb\");\r\nimport DbClient = require(\"../DbClient\");\r\n\r\nconst ObjectID: any = mongodb.ObjectID;\r\n\r\nexport class CustomerModel {\r\n\r\n    constructor() {}\r\n\r\n    public userInfo(userId: any) {\r\n        const users = DbClient.connect()\r\n            .then((db) => {\r\n                return db!.collection(\"users\").find({user_id: userId}).toArray();\r\n            })\r\n            .then((sneakers: any) => {\r\n                // console.log(sneakers);\r\n                return sneakers;\r\n                // res.send(sneakers);\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"err.message\");\r\n            });\r\n\r\n        // console.log(users);\r\n\r\n        return users;\r\n    }\r\n\r\n    public add_shoe(userId: any, shoeID: number, purchase: number) {\r\n        const shoeAdd = DbClient.connect()\r\n            .then((db) => {\r\n                db!.collection(\"user_shoes\").insertOne({user_id: userId, shoe_id: shoeID, purchase_price: purchase});\r\n                console.log(\"adding shoe\");\r\n                return true;\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"err.message\");\r\n                return false;\r\n            });\r\n        return shoeAdd;\r\n    }\r\n\r\n    public edit_shoe(id: any, purchasePrice: any) {\r\n        const result = DbClient.connect()\r\n            .then((db) => {\r\n                db!.collection(\"user_shoes\").updateOne({_id: ObjectID(id)},\r\n                    {$set: {purchase_price: purchasePrice}});\r\n                return true;\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"err.message\");\r\n                return false;\r\n            });\r\n        return result;\r\n    }\r\n\r\n    public remove_shoe(id: any) {\r\n        const shoeRemove = DbClient.connect()\r\n            .then((db) => {\r\n                db!.collection(\"user_shoes\").deleteOne({_id: ObjectID(id)});\r\n                return true;\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"err.message\");\r\n                return false;\r\n            });\r\n        return shoeRemove;\r\n    }\r\n\r\n    public isUser(userID: any) {\r\n        const result = DbClient.connect()\r\n            .then((db) => {\r\n                return db!.collection(\"users\").find({user_id: userID}).toArray();\r\n            })\r\n            .then((value: any) => {\r\n                if (value.length === 0) {\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"err.message\");\r\n            });\r\n        return result;\r\n    }\r\n\r\n    public getKeys(userID: any) {\r\n        const userKeys = DbClient.connect()\r\n            .then((db) => {\r\n                return db!.collection(\"user_shoes\").find({user_id: userID}).toArray();\r\n            })\r\n            .then((sneakers: any) => {\r\n                return sneakers;\r\n                // res.send(sneakers);\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"err.message\");\r\n            });\r\n        return userKeys;\r\n    }\r\n\r\n    public get_users() {\r\n        const users = DbClient.connect()\r\n            .then((db) => {\r\n                return db!.collection(\"users\").find().toArray();\r\n            })\r\n            .then((sneakers: any) => {\r\n                return sneakers;\r\n                // res.send(sneakers);\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"err.message\");\r\n            });\r\n        return users;\r\n    }\r\n\r\n    public get_all_keys() {\r\n        const userKeys = DbClient.connect()\r\n            .then((db) => {\r\n                return db!.collection(\"user_shoes\").find().toArray();\r\n            })\r\n            .then((sneakers: any) => {\r\n                // console.log(sneakers);\r\n                console.log(sneakers);\r\n                return sneakers;\r\n                // res.send(sneakers);\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"err.message\");\r\n            });\r\n        return userKeys;\r\n    }\r\n\r\n    public edit_userName(id:any, editedName:any) {\r\n        const result = DbClient.connect()\r\n            .then((db) => {\r\n                db!.collection(\"users\").updateOne({user_id: id},\r\n                    {$set: {username:editedName}});\r\n                return true;\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"err.message\");\r\n                return false;\r\n            });\r\n        return result;\r\n    }\r\n\r\n\r\n\r\n    public add_user(userId: any, username: any) {\r\n        const add_user = DbClient.connect()\r\n            .then((db) => {\r\n                db!.collection(\"users\").insertOne({ isAdmin: false, user_id: userId, username:username});\r\n                console.log(\"adding user\");\r\n                return true;\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"err.message\");\r\n                return false;\r\n            });\r\n        return add_user;\r\n    }\r\n\r\n\r\n    public remove_user(userId: any) {\r\n        const remove_user = DbClient.connect()\r\n            .then((db) => {\r\n                db!.collection(\"users\").deleteOne({ user_id: userId});\r\n                //db!.collection(\"users\").deleteMany({ user_id: null});\r\n\r\n                console.log(\"deleted user\");\r\n                return true;\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"err.message\");\r\n                return false;\r\n            });\r\n        return remove_user;\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n"]}