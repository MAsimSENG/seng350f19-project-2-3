{"version":3,"file":"user_model.js","sourceRoot":"","sources":["../../../src/models/user_model.ts"],"names":[],"mappings":";;AAAA,sCAAyC;AAEzC;IAEI;IAAe,CAAC;IAET,2BAAO,GAAd,UAAe,MAAW;QACtB,IAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,EAAE;aAC3B,IAAI,CAAC,UAAC,EAAE;YACL,OAAO,EAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,MAAM,EAAC,CAAC,CAAC,OAAO,EAAE,CAAC;QACrE,CAAC,CAAC;aACD,IAAI,CAAC,UAAC,QAAa;YAChB,yBAAyB;YACzB,OAAO,QAAQ,CAAC;YAChB,sBAAsB;QAC1B,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,GAAG;YACP,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEP,sBAAsB;QAEtB,OAAO,KAAK,CAAC;IACjB,CAAC;IAEM,4BAAQ,GAAf,UAAgB,MAAW,EAAE,MAAa,EAAE,QAAe;QACvD,QAAQ,CAAC,OAAO,EAAE;aACb,IAAI,CAAC,UAAC,EAAE;YACL,EAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,EAAC,OAAO,EAAC,MAAM,EAAC,EAAC,EAAC,KAAK,EAAC,EAAC,QAAQ,EAAE,EAAC,SAAS,EAAC,MAAM,EAAC,gBAAgB,EAAC,QAAQ,EAAC,EAAC,EAAC,CAAC,CAAC;QACtH,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,GAAG;YACP,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEP,sBAAsB;IAE1B,CAAC;IAEM,+BAAW,GAAlB,UAAmB,MAAW,EAAE,MAAa;QACzC,QAAQ,CAAC,OAAO,EAAE;aACb,IAAI,CAAC,UAAC,EAAE;YACL,EAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,EAAC,OAAO,EAAC,MAAM,EAAC,EAAC,EAAC,KAAK,EAAC,EAAC,QAAQ,EAAE,EAAC,SAAS,EAAC,MAAM,EAAC,EAAC,EAAC,CAAC,CAAC;QAC5F,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,GAAG;YACP,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACX,CAAC;IACL,gBAAC;AAAD,CAAC,AA7CD,IA6CC;AA7CY,8BAAS","sourcesContent":["import DbClient = require(\"../DbClient\");\r\n\r\nexport class UserModel {\r\n\r\n    constructor() {}\r\n\r\n    public get_all(userId: any) {\r\n        const users = DbClient.connect()\r\n            .then((db) => {\r\n                return db!.collection(\"users\").find({user_id: userId}).toArray();\r\n            })\r\n            .then((sneakers: any) => {\r\n                // console.log(sneakers);\r\n                return sneakers;\r\n                // res.send(sneakers);\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"err.message\");\r\n            });\r\n\r\n        // console.log(users);\r\n\r\n        return users;\r\n    }\r\n\r\n    public add_shoe(userId: any, shoeID:number, purchase:number) {\r\n        DbClient.connect()\r\n            .then((db) => {\r\n                db!.collection(\"users\").update({user_id:userId},{$push:{shoelist: {\"shoe_id\":shoeID,\"purchase_price\":purchase}}});\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"err.message\");\r\n            });\r\n\r\n        // console.log(users);\r\n\r\n    }\r\n\r\n    public remove_shoe(userID: any, shoeID:number) {\r\n        DbClient.connect()\r\n            .then((db) => {\r\n                db!.collection(\"users\").update({user_id:userID},{$pull:{shoelist: {\"shoe_id\":shoeID}}});\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"err.message\");\r\n            });\r\n    }\r\n}\r\n"]}