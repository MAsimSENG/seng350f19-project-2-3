[{"endPosition":{"character":38,"line":86,"position":3015},"failure":"Shadowed name: 'hero'","name":"/home/evan/work/seng350f19-project-2-3/src/routes/heroRouter.ts","ruleName":"no-shadowed-variable","ruleSeverity":"ERROR","startPosition":{"character":34,"line":86,"position":3011}},{"endPosition":{"character":23,"line":88,"position":3088},"failure":"object access via string literals is disallowed","fix":{"innerStart":3081,"innerLength":8,"innerText":".diff"},"name":"/home/evan/work/seng350f19-project-2-3/src/routes/heroRouter.ts","ruleName":"no-string-literal","ruleSeverity":"ERROR","startPosition":{"character":17,"line":88,"position":3082}},{"endPosition":{"character":46,"line":4,"position":230},"failure":"require statement not part of an import statement","name":"/home/evan/work/seng350f19-project-2-3/src/routes/heroRouter.ts","ruleName":"no-var-requires","ruleSeverity":"ERROR","startPosition":{"character":15,"line":4,"position":199}},{"endPosition":{"character":65,"line":2,"position":145},"failure":"Import sources within a group must be alphabetized.","fix":[{"innerStart":0,"innerLength":146,"innerText":"import { NextFunction, Request, Response, Router} from \"express\";\nimport DbClient = require(\"../DbClient\");\nimport { BaseRoute } from \"./router\";\n"}],"name":"/home/evan/work/seng350f19-project-2-3/src/routes/heroRouter.ts","ruleName":"ordered-imports","ruleSeverity":"ERROR","startPosition":{"character":0,"line":2,"position":80}},{"endPosition":{"character":45,"line":85,"position":2975},"failure":"Missing radix parameter","name":"/home/evan/work/seng350f19-project-2-3/src/routes/heroRouter.ts","ruleName":"radix","ruleSeverity":"ERROR","startPosition":{"character":22,"line":85,"position":2952}},{"endPosition":{"character":5,"line":28,"position":689},"failure":"Declaration of public static method not allowed after declaration of public instance field. Instead, this should come at the beginning of the class/interface.","fix":[{"innerStart":367,"innerLength":1972,"innerText":"\n    /**\n     * Bootstrap the application.\n     *\n     * @class Server\n     * @method bootstrap\n     * @static\n     * @return {ng.auto.IInjectorService} Returns the newly created injector for this app.\n     */\n    public static bootstrap(): Server {\n        return new Server();\n    }\n\n    public app: express.Application;\n\n    /**\n     * Constructor.\n     *\n     * @class Server\n     * @constructor\n     */\n    constructor() {\n        // create expressjs application\n        this.app = express();\n\n        // configure application\n        this.config();\n\n        // add routes\n        this.routes();\n    }\n\n    /**\n     * Configure application\n     *\n     * @class Server\n     * @method config\n     */\n    public config() {\n        // add static paths\n        this.app.use(express.static(path.join(__dirname, \"public\")));\n\n        // configure pug\n        this.app.set(\"views\", path.join(__dirname, \"../views\"));\n        this.app.set(\"view engine\", \"pug\");\n\n        // mount logger\n        this.app.use(logger(\"dev\"));\n\n        // mount json form parser\n        this.app.use(bodyParser.json());\n\n        // mount query string parser\n        this.app.use(bodyParser.urlencoded({\n            extended: true,\n        }));\n\n        // mount cookie parser middleware\n        this.app.use(cookieParser(\"SECRET_GOES_HERE\"));\n\n        // catch 404 and forward to error handler\n        this.app.use((err: any, req: express.Request, res: express.Response, next: express.NextFunction) => {\n            err.status = 404;\n            next(err);\n        });\n\n        // error handling\n        this.app.use(errorHandler());\n    }\n\n    /**\n     * Create and return Router.\n     *\n     * @class Server\n     * @method routes\n     * @return void\n     */\n    private routes() {\n        let router: express.Router;\n        router = express.Router();\n\n        IndexRoute.create(router);\n        HeroRouter.create(router);\n\n        // use router middleware\n        this.app.use(router);\n\n    }\n"}],"name":"/home/evan/work/seng350f19-project-2-3/src/app.ts","ruleName":"member-ordering","ruleSeverity":"ERROR","startPosition":{"character":4,"line":26,"position":619}}]
